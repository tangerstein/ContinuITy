buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "de.marcphilipp.gradle:nexus-publish-plugin:0.1.1"
  }
}

apply plugin: "de.marcphilipp.nexus-publish"
dependencies {
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.1'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.1'
	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.1'
	
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
}

/**
 * Creates jar with sources.
 */
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}
/**
 * Creates jar with javadocs.
 */
task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
        }
    }
}

apply plugin: 'signing'

nexusPublishing {
	if(gradle.startParameter.getTaskNames().contains("continuity.idpa:publish")){
    username = project.property('sonatype.username')
	password = project.property('sonatype.password')
	packageGroup = "com.github.continuity-project"
	// Artifacts to build
	artifacts {
		archives sourcesJar, javadocJar
	}
	// Sign the artifacts
	signing {
		sign configurations.archives
	}
	group = "com.github.continuity-project"
	archivesBaseName = "continuity.api"
	stagingProfileId = "6ca7f6472fe302"
	}
}
	
	
	
	nexusStaging {
		if(gradle.startParameter.getTaskNames().contains("continuity.idpa:closeAndReleaseRepository")){
		// check if necessary parameter exists
		if (!project.hasProperty('sonatype.username') || !project.hasProperty('sonatype.password')) {
			throw new GradleException('Credentials for Sonytype are missing.')
		}
		username = project.property('sonatype.username')
		password = project.property('sonatype.password')
		stagingProfileId = "6ca7f6472fe302"
		}
}